version: '3.8'
services:
  frontend:
    build: ./frontend
    image: ghcr.io/iokiris/shafo-frontend:1.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - '3000:3000'
    depends_on:
      - backend
    environment:
      - WATCHPACK_POLLING=true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  backend:
    build: ./backend
    image: ghcr.io/iokiris/shafo-backend:1.0.0
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - ./.env:/app/.env
    ports:
      - '8000:8000'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M

  pgdb:
    image: postgres:16
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Скрипт инициализации
    environment:
      - POSTGRES_DB=${POSTGRES_DB}         # База данных для backend
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - C_SERVICE_DB=${C_SERVICE_DB}
    ports:
      - '5433:5432'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M

  cservice:
    build: ./cservice
    image: ghcr.io/iokiris/shafo-cservice:1.0.0
    volumes:
      - ./cservice:/app
      - /app/tmp
    ports:
      - '8080:8080'
    working_dir: /app
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

volumes:
  db_data:
